"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _customEventTypes = require("../customEventTypes");
function onCustomUpdate(updateCustomHandler) {
    var customEVentType = _customEventTypes.UPDATE_CUSTOM_EVENT_TYPE, customHandler = updateCustomHandler; ///
    this.onCustomEvent(customEVentType, customHandler);
}
function offCustomUpdate(updateCustomHandler) {
    var customEVentType = _customEventTypes.UPDATE_CUSTOM_EVENT_TYPE, customHandler = updateCustomHandler; ///
    this.offCustomEvent(customEVentType, customHandler);
}
function onCustomChange(changeCustomHandler) {
    var customEVentType = _customEventTypes.CHANGE_CUSTOM_EVENT_TYPE, customHandler = changeCustomHandler; ///
    this.onCustomEvent(customEVentType, customHandler);
}
function offCustomChange(changeCustomHandler) {
    var customEVentType = _customEventTypes.CHANGE_CUSTOM_EVENT_TYPE, customHandler = changeCustomHandler; ///
    this.offCustomEvent(customEVentType, customHandler);
}
function onCustomSelect(selectCustomHandler) {
    var customEVentType = _customEventTypes.SELECT_CUSTOM_EVENT_TYPE, customHandler = selectCustomHandler; ///
    this.onCustomEvent(customEVentType, customHandler);
}
function offCustomSelect(selectCustomHandler) {
    var customEVentType = _customEventTypes.SELECT_CUSTOM_EVENT_TYPE, customHandler = selectCustomHandler; ///
    this.offCustomEvent(customEVentType, customHandler);
}
var customEventMixins = {
    onCustomUpdate: onCustomUpdate,
    offCustomUpdate: offCustomUpdate,
    onCustomChange: onCustomChange,
    offCustomChange: offCustomChange,
    onCustomSelect: onCustomSelect,
    offCustomSelect: offCustomSelect
};
var _default = customEventMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvY3VzdG9tRXZlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IFVQREFURV9DVVNUT01fRVZFTlRfVFlQRSwgQ0hBTkdFX0NVU1RPTV9FVkVOVF9UWVBFLCBTRUxFQ1RfQ1VTVE9NX0VWRU5UX1RZUEUgfSBmcm9tIFwiLi4vY3VzdG9tRXZlbnRUeXBlc1wiO1xuXG5mdW5jdGlvbiBvbkN1c3RvbVVwZGF0ZSh1cGRhdGVDdXN0b21IYW5kbGVyKSB7XG4gIGNvbnN0IGN1c3RvbUVWZW50VHlwZSA9IFVQREFURV9DVVNUT01fRVZFTlRfVFlQRSxcbiAgICAgICAgY3VzdG9tSGFuZGxlciA9IHVwZGF0ZUN1c3RvbUhhbmRsZXI7ICAvLy9cblxuICB0aGlzLm9uQ3VzdG9tRXZlbnQoY3VzdG9tRVZlbnRUeXBlLCBjdXN0b21IYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb2ZmQ3VzdG9tVXBkYXRlKHVwZGF0ZUN1c3RvbUhhbmRsZXIpIHtcbiAgY29uc3QgY3VzdG9tRVZlbnRUeXBlID0gVVBEQVRFX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICBjdXN0b21IYW5kbGVyID0gdXBkYXRlQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub2ZmQ3VzdG9tRXZlbnQoY3VzdG9tRVZlbnRUeXBlLCBjdXN0b21IYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25DdXN0b21DaGFuZ2UoY2hhbmdlQ3VzdG9tSGFuZGxlcikge1xuICBjb25zdCBjdXN0b21FVmVudFR5cGUgPSBDSEFOR0VfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBjaGFuZ2VDdXN0b21IYW5kbGVyOyAgLy8vXG5cbiAgdGhpcy5vbkN1c3RvbUV2ZW50KGN1c3RvbUVWZW50VHlwZSwgY3VzdG9tSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9mZkN1c3RvbUNoYW5nZShjaGFuZ2VDdXN0b21IYW5kbGVyKSB7XG4gIGNvbnN0IGN1c3RvbUVWZW50VHlwZSA9IENIQU5HRV9DVVNUT01fRVZFTlRfVFlQRSxcbiAgICAgICAgY3VzdG9tSGFuZGxlciA9IGNoYW5nZUN1c3RvbUhhbmRsZXI7ICAvLy9cblxuICB0aGlzLm9mZkN1c3RvbUV2ZW50KGN1c3RvbUVWZW50VHlwZSwgY3VzdG9tSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9uQ3VzdG9tU2VsZWN0KHNlbGVjdEN1c3RvbUhhbmRsZXIpIHtcbiAgY29uc3QgY3VzdG9tRVZlbnRUeXBlID0gU0VMRUNUX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICBjdXN0b21IYW5kbGVyID0gc2VsZWN0Q3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub25DdXN0b21FdmVudChjdXN0b21FVmVudFR5cGUsIGN1c3RvbUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvZmZDdXN0b21TZWxlY3Qoc2VsZWN0Q3VzdG9tSGFuZGxlcikge1xuICBjb25zdCBjdXN0b21FVmVudFR5cGUgPSBTRUxFQ1RfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBzZWxlY3RDdXN0b21IYW5kbGVyOyAgLy8vXG5cbiAgdGhpcy5vZmZDdXN0b21FdmVudChjdXN0b21FVmVudFR5cGUsIGN1c3RvbUhhbmRsZXIpO1xufVxuXG5jb25zdCBjdXN0b21FdmVudE1peGlucyA9IHtcbiAgb25DdXN0b21VcGRhdGUsXG4gIG9mZkN1c3RvbVVwZGF0ZSxcbiAgb25DdXN0b21DaGFuZ2UsXG4gIG9mZkN1c3RvbUNoYW5nZSxcbiAgb25DdXN0b21TZWxlY3QsXG4gIG9mZkN1c3RvbVNlbGVjdFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY3VzdG9tRXZlbnRNaXhpbnM7XG4iXSwibmFtZXMiOlsib25DdXN0b21VcGRhdGUiLCJ1cGRhdGVDdXN0b21IYW5kbGVyIiwiY3VzdG9tRVZlbnRUeXBlIiwiVVBEQVRFX0NVU1RPTV9FVkVOVF9UWVBFIiwiY3VzdG9tSGFuZGxlciIsIm9uQ3VzdG9tRXZlbnQiLCJvZmZDdXN0b21VcGRhdGUiLCJvZmZDdXN0b21FdmVudCIsIm9uQ3VzdG9tQ2hhbmdlIiwiY2hhbmdlQ3VzdG9tSGFuZGxlciIsIkNIQU5HRV9DVVNUT01fRVZFTlRfVFlQRSIsIm9mZkN1c3RvbUNoYW5nZSIsIm9uQ3VzdG9tU2VsZWN0Iiwic2VsZWN0Q3VzdG9tSGFuZGxlciIsIlNFTEVDVF9DVVNUT01fRVZFTlRfVFlQRSIsIm9mZkN1c3RvbVNlbGVjdCIsImN1c3RvbUV2ZW50TWl4aW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkF1REE7OztlQUFBOzs7Z0NBckQ2RjtBQUU3RixTQUFTQSxlQUFlQyxtQkFBbUI7SUFDekMsSUFBTUMsa0JBQWtCQywwQ0FBd0IsRUFDMUNDLGdCQUFnQkgscUJBQXNCLEdBQUc7SUFFL0MsSUFBSSxDQUFDSSxhQUFhLENBQUNILGlCQUFpQkU7QUFDdEM7QUFFQSxTQUFTRSxnQkFBZ0JMLG1CQUFtQjtJQUMxQyxJQUFNQyxrQkFBa0JDLDBDQUF3QixFQUMxQ0MsZ0JBQWdCSCxxQkFBc0IsR0FBRztJQUUvQyxJQUFJLENBQUNNLGNBQWMsQ0FBQ0wsaUJBQWlCRTtBQUN2QztBQUVBLFNBQVNJLGVBQWVDLG1CQUFtQjtJQUN6QyxJQUFNUCxrQkFBa0JRLDBDQUF3QixFQUMxQ04sZ0JBQWdCSyxxQkFBc0IsR0FBRztJQUUvQyxJQUFJLENBQUNKLGFBQWEsQ0FBQ0gsaUJBQWlCRTtBQUN0QztBQUVBLFNBQVNPLGdCQUFnQkYsbUJBQW1CO0lBQzFDLElBQU1QLGtCQUFrQlEsMENBQXdCLEVBQzFDTixnQkFBZ0JLLHFCQUFzQixHQUFHO0lBRS9DLElBQUksQ0FBQ0YsY0FBYyxDQUFDTCxpQkFBaUJFO0FBQ3ZDO0FBRUEsU0FBU1EsZUFBZUMsbUJBQW1CO0lBQ3pDLElBQU1YLGtCQUFrQlksMENBQXdCLEVBQzFDVixnQkFBZ0JTLHFCQUFzQixHQUFHO0lBRS9DLElBQUksQ0FBQ1IsYUFBYSxDQUFDSCxpQkFBaUJFO0FBQ3RDO0FBRUEsU0FBU1csZ0JBQWdCRixtQkFBbUI7SUFDMUMsSUFBTVgsa0JBQWtCWSwwQ0FBd0IsRUFDMUNWLGdCQUFnQlMscUJBQXNCLEdBQUc7SUFFL0MsSUFBSSxDQUFDTixjQUFjLENBQUNMLGlCQUFpQkU7QUFDdkM7QUFFQSxJQUFNWSxvQkFBb0I7SUFDeEJoQixnQkFBQUE7SUFDQU0saUJBQUFBO0lBQ0FFLGdCQUFBQTtJQUNBRyxpQkFBQUE7SUFDQUMsZ0JBQUFBO0lBQ0FHLGlCQUFBQTtBQUNGO0lBRUEsV0FBZUMifQ==